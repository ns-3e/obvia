version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: obvia-mysql
    restart: unless-stopped
    environment:
      # Development defaults - change these for production
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: obvia
      MYSQL_USER: obvia
      MYSQL_PASSWORD: obvia
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: obvia-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 20s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: obvia-backend
    restart: unless-stopped
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DB=obvia
      - MYSQL_USER=obvia
      - MYSQL_PASSWORD=obvia
      - REDIS_URL=redis://redis:6379/0
      - MEDIA_ROOT=/app/media
      - DEBUG=true
      - SECRET_KEY=your-secret-key-here
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - GOOGLE_BOOKS_ENABLED=true
      - OPEN_LIBRARY_ENABLED=true
      - AI_PROVIDER=disabled
    ports:
      - "8000:8000"
    volumes:
      - media_data:/app/media
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      timeout: 30s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: obvia-frontend
    restart: unless-stopped
    ports:
      - "5173:80"
    depends_on:
      - backend
    environment:
      - VITE_API_BASE_URL=http://localhost:8000/api

  # Optional MinIO service (disabled by default)
  # minio:
  #   image: minio/minio:latest
  #   container_name: obvia-minio
  #   restart: unless-stopped
  #   environment:
  #     MINIO_ROOT_USER: minioadmin
  #     MINIO_ROOT_PASSWORD: minioadmin
  #   ports:
  #     - "9000:9000"
  #     - "9001:9001"
  #   volumes:
  #     - minio_data:/data
  #   command: server /data --console-address ":9001"
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
  #     timeout: 20s
  #     retries: 10

volumes:
  mysql_data:
  media_data:
  # minio_data:
